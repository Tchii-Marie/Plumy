from discord.ext import commands
import discord
import asyncio

class Roman(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    async def roman(self, ctx):
        questions = [
            "1Ô∏è‚É£ Quel est le **titre** de ton roman ?",
            "2Ô∏è‚É£ Quel est le **genre litt√©raire** ?",
            "3Ô∏è‚É£ Quelle est l **ambiance g√©n√©rale** ? (myst√©rieuse, l√©g√®re, dramatique...)", 
            "4Ô∏è‚É£ Qui sont les **personnages principaux** ou id√©es de personnages ?", 
            "5Ô∏è‚É£ Le roman se passe-t-il dans un **univers r√©el ou invent√©** ?", 
            "6Ô∏è‚É£ √âcris un **pitch rapide** (r√©sum√© en quelques lignes)."
        ]

        await ctx.send("üìñ Cr√©ons ta fiche projet roman. Tu peux r√©pondre √† chaque question une par une.")

        reponses = []
        def check(m): return m.author == ctx.author and m.channel == ctx.channel

        for q in questions:
            await ctx.send(q)
            try:
                msg = await self.bot.wait_for("message", check=check, timeout=180)
                reponses.append(msg.content)
            except asyncio.TimeoutError:
                await ctx.send("‚è∞ Temps √©coul√©. Tu peux relancer la commande avec `!roman`.")
                return

        nom_fichier = f"projet_roman_{ctx.author.name}.txt"
        with open(nom_fichier, "w", encoding="utf-8") as f:
            f.write(f"Projet Roman de {ctx.author.display_name}\n\n")
            for i in range(len(questions)):
                f.write(f"{questions[i]}\n{reponses[i]}\n\n")

        await ctx.send("‚úÖ Fiche compl√©t√©e ! Voici ton fichier üìé :", file=discord.File(nom_fichier))

async def setup(bot):
    await bot.add_cog(Roman(bot))